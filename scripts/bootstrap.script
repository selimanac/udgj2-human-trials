local gs = require("scripts.general.game_state")
local h = require("scripts.general.hashes")
local s = require("scripts.general.settings")

function init(self)
	msg.post("@render:", "clear_color", {color = vmath.vector4(1, 1, 1, 0)})

	-- Init game state
	gs:init()

	-- Set initial launch
	gs.fsm:launch()
end

local function enable_scene(scene_url)
	msg.post(msg.url(scene_url), "init")
	msg.post(msg.url(scene_url), "enable")
end

local function unload_scene(scene)
	msg.post(scene, "disable")
	msg.post(scene, "final")
	msg.post(scene, "unload")
end

function on_message(self, message_id, message, sender)
	-- Load Scene
	if message_id == h.LOAD_PROXY then
		msg.post(message.scene, message.type)
	elseif message_id == h.PROXY_LOADED then
		if sender == msg.url(s.scenes.LoadingProxy) then
			enable_scene(sender)
		elseif sender == msg.url(s.scenes.GameProxy) then
			--msg.post(sender, "init")
			self.gamescene = sender
			enable_scene(sender)
		end
	elseif message_id == h.UNLOAD_PROXY then
		unload_scene(message.scene)
	elseif message_id == h.PROXY_UNLOADED then
		if sender == msg.url(s.scenes.LoadingProxy) then
			gs.fsm:play()
		end
	end
end
