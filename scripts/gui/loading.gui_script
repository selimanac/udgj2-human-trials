local gs = require("scripts.general.game_state")
local s = require("scripts.general.settings")
local h = require("scripts.general.hashes")

local function unload_scene()
	msg.post(s.scenes.GameGUI, "init_anims")
	msg.post(s.proxy, "unload_proxy", {scene = s.scenes.LoadingProxy})
end

local function load_music()
	if s.game_music == 0 then
		if s.is_music then
			player.build_path("") -- Set build path only for Defold Editor
		end
		s.game_music = player.load_music("music_1.xm") -- Load mod file and assign it is ID[int] 1-3
	end

	if player.is_music_playing(s.game_music) == false then
		player.xm_volume(s.game_music, 1, 0.15)
		player.play_music(s.game_music)
	end
end

local function loading_transition(self)
	gui.animate(self.logo_node, "position.y", s.display_height + 30, gui.EASING_INCIRC, 0.5, 0, load_music, gui.PLAYBACK_ONCE_BACKWARD)
	gui.animate(self.human_node, "color.w", 0, gui.EASING_LINEAR, 0.4, 0, nil, gui.PLAYBACK_ONCE_BACKWARD)
end

local function game_transition(self)
	gui.animate(self.logo_node, "position.y", s.display_height + 30, gui.EASING_OUTCIRC, 0.5, 0, nil, gui.PLAYBACK_ONCE_FORWARD)
	gui.animate(self.human_node, "color.w", 0, gui.EASING_LINEAR, 0.3, 0, nil, gui.PLAYBACK_ONCE_FORWARD)
	gui.animate(self.box_node, "position.y", s.display_height + (s.display_height / 2), gui.EASING_OUTCIRC, 0.5, 0.2, unload_scene, gui.PLAYBACK_ONCE_FORWARD)
end

function init(self)
	gui.set_render_order(1)
	-- Start loading game
	gs.fsm:load()

	self.logo_node = gui.get_node("logo")
	self.human_node = gui.get_node("human")
	self.box_node = gui.get_node("box")

	loading_transition(self)
end

function on_message(self, message_id, message, sender)
	if message_id == h.GAME_TRANSITION then
		timer.delay(
			1.0,
			false,
			function()
				game_transition(self)
			end
		)
	end
end
